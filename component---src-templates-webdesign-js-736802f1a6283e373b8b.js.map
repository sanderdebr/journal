{"version":3,"sources":["webpack:///./src/images/general-header-image.jpg","webpack:///./src/components/HeaderNav/index.js","webpack:///./src/templates/webdesign.js"],"names":["module","exports","HeaderNav","className","style","backgroundImage","headerImg","to","window","location","href","indexOf","Webdesign","props","blogContent","data","allContentfulBlog","pageContext","currentPage","isFirst","isLast","numPages","prevPage","nextPage","title","keywords","edges","map","edge","key","node","id","featuredImage","fluid","src","onClick","navigate","slug","category","rel","pageQuery"],"mappings":"+EAAAA,EAAOC,QAAU,IAA0B,oE,kCCA3C,0DAoBeC,IAhBG,WACd,OACI,gCACI,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,gBAAgBC,MAAO,CAACC,gBAAgB,OAAQC,IAAT,OACtD,yBAAKH,UAAU,gBACX,kBAAC,OAAD,CAAMI,GAAG,QAAQJ,UAAWK,OAAOC,SAASC,KAAKC,QAAQ,SAAW,EAAI,8BAAgC,sBAAxG,OACA,kBAAC,OAAD,CAAMJ,GAAG,uBAAuBJ,UAAWK,OAAOC,SAASC,KAAKC,QAAQ,uBAAyB,EAAI,8BAAgC,sBAArI,cACA,kBAAC,OAAD,CAAMJ,GAAG,gBAAgBJ,UAAWK,OAAOC,SAASC,KAAKC,QAAQ,gBAAkB,EAAI,8BAAgC,sBAAvH,OACA,kBAAC,OAAD,CAAMJ,GAAG,sBAAsBJ,UAAWK,OAAOC,SAASC,KAAKC,QAAQ,sBAAwB,EAAI,8BAAgC,sBAAnI,kB,kCCbpB,0JAkEeC,UAzDG,SAACC,GAEf,IAAMC,EAAcD,EAAME,KAAKC,kBAFN,EAGSH,EAAMI,YAAhCC,EAHiB,EAGjBA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IALU,EAGJG,SAGfC,EAAWJ,EAAc,GAAM,EAAI,sBAAxB,wBAAuEA,EAAc,GAChGK,EAAQ,wBAA0BL,EAAc,GAEtD,OACI,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKM,MAAM,OAAOC,SAAU,CAAC,SAAU,cAAe,wBACtD,kBAAC,IAAD,MACA,kBAAC,IAAD,MAEA,yBAAKtB,UAAU,QACVW,EAAYY,MAAMC,KAAI,SAAAC,GAAI,OACvB,yBAAKC,IAAKD,EAAKE,KAAKC,GAAI5B,UAAU,OAClCC,MAAO,CACHC,gBAAgB,iNAKVuB,EAAKE,KAAKE,cAAcC,MAAMC,IALrB,KAOvBC,QAAS,kBAAMC,mBAAS,SAASR,EAAKE,KAAKO,QAE1CT,EAAKE,KAAKQ,SAASX,KAAI,SAAAW,GAAQ,OAChC,uBAAGnC,UAAU,kBAAkBmC,EAASA,aAExC,uBAAGnC,UAAU,eAAeyB,EAAKE,KAAKN,YAK1C,yBAAKrB,UAAU,cACX,yBAAKA,UAAU,qBACTgB,GACE,kBAAC,OAAD,CAAMZ,GAAIe,EAAUiB,IAAI,QACpB,yBAAKpC,UAAU,kBAI3B,yBAAKA,UAAU,qBACTiB,GACE,kBAAC,OAAD,CAAMb,GAAIgB,EAAUgB,IAAI,QACpB,yBAAKpC,UAAU,qBAYhC,IAAMqC,EAAS","file":"component---src-templates-webdesign-js-736802f1a6283e373b8b.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/general-header-image-949c7e63908216492c2e5e4bbc15423d.jpg\";","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport headerImg from '../../images/general-header-image.jpg';\r\n\r\nconst HeaderNav = () => {\r\n    return (\r\n        <header>\r\n            <div className='archive__section'>\r\n                <div className='archive__hero' style={{backgroundImage: `url(${headerImg})`}}></div>\r\n                <div className='archive__nav'>\r\n                    <Link to='/blog' className={window.location.href.indexOf('/blog') > 0 ? 'archive__nav--link selected' : 'archive__nav--link'}>All</Link>\r\n                    <Link to='/category/javascript' className={window.location.href.indexOf('category/javascript') > 0 ? 'archive__nav--link selected' : 'archive__nav--link'}>Javascript</Link>\r\n                    <Link to='/category/css' className={window.location.href.indexOf('category/css') > 0 ? 'archive__nav--link selected' : 'archive__nav--link'}>CSS</Link>\r\n                    <Link to='/category/webdesign' className={window.location.href.indexOf('category/webdesign') > 0 ? 'archive__nav--link selected' : 'archive__nav--link'}>Webdesign</Link>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default HeaderNav;","import React from 'react';\r\nimport { Link, graphql, navigate } from 'gatsby';\r\nimport Layout from '../components/layout';\r\nimport Nav from '../components/nav';\r\nimport HeaderNav from '../components/HeaderNav';\r\nimport SEO from '../components/seo';\r\nimport '../components/home/home.css';\r\nimport './archive.css';\r\n\r\nconst Webdesign = (props) => {\r\n\r\n    const blogContent = props.data.allContentfulBlog\r\n    const { currentPage, numPages } = props.pageContext\r\n    const isFirst = currentPage === 1\r\n    const isLast = currentPage === numPages\r\n    const prevPage = currentPage - 1 === 1 ? '/category/webdesign' : `/category/webdesign/${currentPage - 1}`\r\n    const nextPage = `/category/webdesign/${currentPage + 1}`\r\n\r\n    return (\r\n        <Layout>\r\n        <SEO title='Blog' keywords={['travel', 'travel blog', 'travel photography']} />\r\n        <Nav />\r\n        <HeaderNav />\r\n\r\n        <div className='feed'>\r\n            {blogContent.edges.map(edge => (\r\n                <div key={edge.node.id} className='card'\r\n                style={{\r\n                    backgroundImage: `linear-gradient(\r\n                    to bottom,\r\n                    rgba(10,10,10,0) 0%,\r\n                    rgba(10,10,10,0) 50%,\r\n                    rgba(10,10,10,0.7) 100%),\r\n                    url(${edge.node.featuredImage.fluid.src})`  \r\n                }}\r\n            onClick={() => navigate(`/blog/${edge.node.slug}`)}\r\n            >\r\n            {edge.node.category.map(category => (\r\n            <p className='card__category'>{category.category}</p>\r\n            ))}\r\n            <p className='card__title'>{edge.node.title}</p>\r\n            </div>\r\n            ))}\r\n        </div>\r\n\r\n        <div className='pagination'>\r\n            <div className='pagination__item'>\r\n                {!isFirst && (\r\n                    <Link to={prevPage} rel='prev'>\r\n                        <div className='arrow__back'></div>\r\n                    </Link>\r\n                )}\r\n            </div>\r\n            <div className='pagination__item'>\r\n                {!isLast && (\r\n                    <Link to={nextPage} rel='next'>\r\n                        <div className='arrow__next'></div>\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </div>\r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Webdesign\r\n\r\nexport const pageQuery = graphql` \r\n query WebdesignQuery ($skip: Int!, $limit: Int!) {\r\n   allContentfulBlog(\r\n       sort: { fields: [createdAt], order: DESC }\r\n       filter: {\r\n       node_locale: {eq: \"en-US\",}\r\n       category: {elemMatch: {title: {eq: \"Webdesign\"}}}\r\n    }\r\n       skip: $skip\r\n       limit: $limit\r\n     ) {\r\n     edges {\r\n       node {\r\n         id\r\n         slug\r\n         title\r\n         createdAt\r\n         category {\r\n           title\r\n           id\r\n         }\r\n         featuredImage {\r\n           fluid(maxWidth: 1200, quality: 85) {\r\n             src\r\n             ...GatsbyContentfulFluid\r\n           }\r\n         }\r\n       }\r\n     }\r\n   }\r\n }\r\n`\r\n"],"sourceRoot":""}